import z from "@/lib/zod";
import { clickEventSchemaTB } from "./clicks";

export const trackSaleRequestSchema = z.object({
  // Required
  customerId: z
    .string({ required_error: "customerId is required" })
    .trim()
    .min(1, "customerId is required"),
  amount: z.number({ required_error: "amount is required" }).int().positive(),
  paymentProcessor: z.enum(["stripe", "shopify", "paddle"]),

  // Optional
  invoiceId: z.string().nullish().default(null),
  currency: z.string().default("usd"),
  metadata: z.record(z.unknown()).nullish().default(null),
});

export const trackSaleResponseSchema = z.object({
  customerId: z.string(),
  amount: z.number(),
  paymentProcessor: z.string(),
  invoiceId: z.string().nullable(),
  currency: z.string(),
  metadata: z.record(z.unknown()).nullable(),
});

export const saleEventSchemaTB = clickEventSchemaTB
  .omit({ timestamp: true })
  .and(
    z.object({
      timestamp: z.string().optional(), //autogenerated by Tinybird
      event_id: z.string(),
      customer_id: z.string(),
      payment_processor: z.string(),
      amount: z.number(),
      invoice_id: z.string().default(""),
      currency: z.string().default("usd"),
      metadata: z.string().default(""),
    }),
  );
