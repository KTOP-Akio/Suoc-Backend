enum ProgramType {
  affiliate
  referral
}

enum CommissionType {
  percentage
  flat
}

enum ProgramEnrollmentStatus {
  approved
  pending
  rejected
}

enum CommissionInterval {
  month
  year
}

enum ProgramResourceType {
  logo
  files
}

model Program {
  id                  String              @id @default(cuid())
  workspaceId         String
  name                String
  slug                String              @unique
  logo                String?
  type                ProgramType         @default(affiliate)
  cookieLength        Int                 @default(90)
  commissionAmount    Int                 @default(0)
  commissionType      CommissionType      @default(percentage)
  recurringCommission Boolean             @default(false)
  recurringInterval   CommissionInterval?
  recurringDuration   Int?
  isLifetimeRecurring Boolean? // TODO: Maybe use just lifetimeRecurring?

  brandColor          String?
  wordmark            String?
  landerData          Json?   @db.Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workspace    Project             @relation(fields: [workspaceId], references: [id])
  partners     ProgramEnrollment[]
  payouts      Payout[]
  sales        Sale[]
  resources    ProgramResource[]
  applications ProgramApplication[]
  invites      ProgramInvite[]

  @@index([workspaceId])
}

model ProgramEnrollment {
  id            String  @id @default(cuid())
  partnerId     String
  programId     String

  applicationId String? @unique
  linkId        String? @unique
  dotsUserId    String? @unique

  status ProgramEnrollmentStatus @default(pending)

  createdAt DateTime                @default(now())
  updatedAt DateTime                @updatedAt

  partner Partner @relation(fields: [partnerId], references: [id])
  program Program @relation(fields: [programId], references: [id])
  link    Link?   @relation(fields: [linkId], references: [id])

  application ProgramApplication? @relation(fields: [applicationId], references: [id])

  @@unique([partnerId, programId])
  @@index([programId])
  @@index([linkId])
  @@index([applicationId])
}

enum ProgramApplicationStatus {
  pending
  approved
  rejected
}

model ProgramApplication {
  id String @id @default(cuid())
  programId String

  name     String
  email    String
  plan     String
  website  String?
  comments String?

  status    ProgramApplicationStatus @default(pending)
  createdAt DateTime                 @default(now())
  updatedAt DateTime                 @updatedAt

  program    Program @relation(fields: [programId], references: [id])
  enrollment ProgramEnrollment?

  @@index([programId])
}

// TODO: Haven't finalized the resource table yet.
model ProgramResource {
  id        String              @id @default(cuid())
  programId String
  type      ProgramResourceType
  name      String
  url       String
  size      Int?
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt

  program Program @relation(fields: [programId], references: [id])

  @@index([programId])
}

model ProgramInvite {
  id        String   @id @default(cuid())
  programId String
  email     String
  linkId    String   @unique
  createdAt DateTime @default(now())

  program Program @relation(fields: [programId], references: [id])
  link    Link?   @relation(fields: [linkId], references: [id])

  @@unique([email, programId])
  @@index([programId])
  @@index([linkId])
}
